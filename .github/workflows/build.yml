name: marble build

on:
    push:
        branches:
            - "main"
            - "dev/package"
            - "dev/package-github"
    # XXX create # only on tag TODO
    # XXX deployment # is this a release?
    #   tags: # XXX temporary...probably
    #       - "test_tag"

    # release: # TODO there is such a thing as a "draft" release which maybe could facilitate testing here without messing things up
    #     types: [published]

    # TODO
    # schedule:
    #   - cron: "15 4,5 * * *"

# permissions:
#     contents: read

jobs:
    build:
        runs-on: windows-2022

        env:
            UPLOAD_NAME: ${{ github.sha }}

        steps:

            - name: checkout
              uses: actions/checkout@v4
              with:
                  submodules: recursive

            - if: github.event_name == "release" && github.event.action == "published"
              name: release version
              run: echo "UPLOAD_NAME=${{ github.event.release.tag_name }}" >> $GITHUB_ENV
              shell: bash

            - name: build
              # this location is guaranteed for windows-2022 runners - see https://github.com/actions/runner-images/blob/main/images/windows/Windows2022-Readme.md#visual-studio-enterprise-2022
              run: >
                  call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat" &&
                  cl.exe -DRELEASE build.c &&
                  .\build.exe
              shell: cmd

            - name: artifact upload
              uses: actions/upload-artifact@v4
              with:
                  name: ${{ env.UPLOAD_NAME }}
                  path: install

            #- if: github.event_name == "release" && github.event.action == "published"
            #  name: release upload
            #  uses: actions/upload-release-asset@v1.0.2
            #  env:
            #      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            #  with:
            #      upload_url: ${{ github.even.release.upload_url }}
            #      asset_path: install # TODO raylib has this as a single zip file created during upload-artifacts, but upload-artifacts already produces a zip without me making it.  although, TODO, it's just named "upload.zip" which I need to fix
            #      asset_name: release # TODO
            #      # asset_content_type: application/zip

            - if: github.event_name == "release" && github.event.action == "published"  # alt? github.ref_type == "tag"
              name: release upload
              uses: softprops/action-gh-release@v2
              with:
                  files: install

# TODO? actions/stale@v9

