name: marble build

on:
    push:
        branches:
            - "main"
            - "dev/package"
            - "dev/package-github"

        tags: # TODO test this in conjunction with "Change name if tag" step below
            - "test_tag"
            # - '*'

    # release:
    #     types: [published]


jobs:
    build_windows:
        runs-on: windows-2022

        # env:
        #     UPLOAD_NAME: ${{ github.sha }}

        steps:

            - name: Clone
              uses: actions/checkout@v4
              with:
                  submodules: recursive

            - name: Build
              # the location of vcvars is guaranteed for Windows runners - see https://github.com/actions/runner-images/blob/main/images/windows/Windows2022-Readme.md#visual-studio-enterprise-2022
              run: >
                  call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat" &&
                  cl.exe -DRELEASE build.c &&
                  .\build.exe
              shell: cmd

            ## - if: github.event_name == 'release' && github.event.action == 'published'
            #- if: github.ref_type == 'tag'
            #  name: Change name if tag
            #  #run: echo "UPLOAD_NAME=${{ github.event.release.tag_name }}" >> $GITHUB_ENV
            #  run: echo "UPLOAD_NAME=${{ github.ref_name }}" >> $GITHUB_ENV
            #  shell: bash

            - name: Name
              #run: echo "UPLOAD_NAME=${{ github.event.release.tag_name }}" >> $GITHUB_ENV
              run: |
                if [[ "${{ github.ref_type }}" == "tag" ]]; then
                  echo "UPLOAD_NAME=${{ github.ref_name }}" >> $GITHUB_ENV
                elif [[ "${{ github.ref_type }}" == "branch" ]]; then
                  echo "UPLOAD_NAME=${{ github.ref_name }}_${{ github.sha }}" | sed "s#/#_#g" >> $GITHUB_ENV
                else
                  echo "UPLOAD_NAME=${{ github.sha }}" >> $GITHUB_ENV
                fi
              shell: bash

            - name: Upload
              uses: actions/upload-artifact@v4
              with:
                  #name: ${{ github.sha }}
                  #name: ${{ github.ref_name }}
                  #name: ${{ github.ref_type == 'tag' && github.ref_name || github.ref_type == 'branch' && format('{0}_{1}', github.ref_name, github.sha) || github.sha }}
                  name: ${{ env.UPLOAD_NAME }}
                  path: install

            # - if: github.event_name == 'release' && github.event.action == 'published'
            #   name: release upload
            #   uses: actions/upload-release-asset@v1
            #   env:
            #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            #   with:
            #       upload_url: ${{ github.event.release.upload_url }}
            #       asset_path: install
            #       asset_name: ${{ env.UPLOAD_NAME }}
            #       # asset_content_type: application/zip

            # - if: github.event_name == 'release' && github.event.action == 'published'
            # - if: github.ref_type == 'tag'
            #   name: Upload build artifacts to release
            #   uses: softprops/action-gh-release@v2
            #   with:
            #       files: install

# TODO actions/stale@v9, or see if there's an "expires" setting with upload
# TODO? schedule: cron:

